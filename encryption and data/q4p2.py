import base64
import requests
import json
import libsodium
import nacl.secret
import nacl.utils
import nacl.hash
import nacl.encoding
from nacl.public import PrivateKey, Box
import random

token = "35d15be0f7cb11c2d0e9548ce2c9246b9148bf53d0587d764821c0c33a8a86ae"
skme = PrivateKey.generate()
pkme = skme.public_key
print(skme)
print(pkme)
r = requests.post(
    url="https://hash-browns.cs.uwaterloo.ca/api/pke/set-key",
    headers={"Content-Type":"application/json", "Accept":"application/json"}, 
    json={
        "api_token": token,
        "pubkey": str(base64.b64encode(pkme.encode()))[2:-1]
        }
    )
print(f"Status Code: {r.status_code}, Response: {r.json()}")
pkMuffin = base64.b64decode(b'vWhPR97fZ2we2hkcGIkpmxVLjBysWtKjJjbV/sody0A=')
Muffin_box = Box(skme, nacl.public.PublicKey(pkMuffin))
message = b"Frou Frou Foxes in Midsummer Fires"
encrypted = Muffin_box.encrypt(message)
r = requests.post(
    url="https://hash-browns.cs.uwaterloo.ca/api/pke/send",
    headers={"Content-Type":"application/json", "Accept":"application/json"}, 
    json={
        "api_token": token,
        "recipient": "Muffin",
        "msg": str(base64.b64encode(encrypted))[2:-1]
        }
    )
print(f"Status Code: {r.status_code}, Response: {r.json()}")
