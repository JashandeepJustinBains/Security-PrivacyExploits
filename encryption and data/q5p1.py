import base64
import requests
import json
import libsodium
import nacl.secret
import nacl.utils
import nacl.hash
import nacl.encoding
from nacl.public import PrivateKey, Box
import random

token = "35d15be0f7cb11c2d0e9548ce2c9246b9148bf53d0587d764821c0c33a8a86ae"
skme = PrivateKey.generate()
pkme = skme.public_key
print(skme)
with open ("savedkey.txt", 'w') as out:
    out.write(str(skme))
print(pkme)
r = requests.post(
    url="https://hash-browns.cs.uwaterloo.ca/api/surveil/set-key",
    headers={"Content-Type":"application/json", "Accept":"application/json"}, 
    json={
        "api_token": token,
        "pubkey": str(base64.b64encode(pkme.encode()))[2:-1]
        }
    )
print(f"Status Code: {r.status_code}, Response: {r.json()}")

r = requests.post(
    url="https://hash-browns.cs.uwaterloo.ca/api/surveil/get-key",
    headers={"Content-Type":"application/json", "Accept":"application/json"},
    json={
        "api_token": token,
        "user": "Muffin"
        }
    )
print(f"Status Code: {r.status_code}, Response: {r.json()}")

pkMuffin = nacl.public.PublicKey(base64.b64decode(json.loads(r.content)['pubkey']))
pkGov = nacl.public.PublicKey(base64.b64decode('Olk3vi3yGTCMc7F5epC36trM65uG6v58RVECoAMKQh8='))

message = b"Frou Frou Foxes in Midsummer Fires"
message_key = nacl.utils.random(nacl.secret.SecretBox.KEY_SIZE)
box = nacl.secret.SecretBox(message_key)
encrypted = box.encrypt(message)
Muffin_box = Box(skme, pkMuffin)
Gov_box = Box(skme, pkGov)
encryptedM = Muffin_box.encrypt(message_key)
encryptedG = Gov_box.encrypt(message_key)

r = requests.post(
    url="https://hash-browns.cs.uwaterloo.ca/api/surveil/send",
    headers={"Content-Type":"application/json", "Accept":"application/json"}, 
    json={
        "api_token": token,
        "recipient": "Muffin",
        "msg": str(base64.b64encode(encrypted))[2:-1],
        "recipient_key": str(base64.b64encode(encryptedM))[2:-1],
        "gov_key": str(base64.b64encode(encryptedG))[2:-1]
        }
    )
print(f"Status Code: {r.status_code}, Response: {r.json()}")
